// Code generated by Wire. DO NOT EDIT.

//go:generate go run -mod=mod github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package main

import (
	"database/sql"
	"github.com/Berchon/Clean-Architecture/internal/entity"
	"github.com/Berchon/Clean-Architecture/internal/event"
	"github.com/Berchon/Clean-Architecture/internal/infra/database"
	"github.com/Berchon/Clean-Architecture/internal/infra/web"
	"github.com/Berchon/Clean-Architecture/internal/usecase"
	"github.com/Berchon/Clean-Architecture/pkg/events"
	"github.com/google/wire"
)

import (
	_ "github.com/go-sql-driver/mysql"
)

// Injectors from wire.go:

func NewOrderUseCase(db *sql.DB, eventDispatcher events.EventDispatcherInterface) *usecase.OrderUseCase {
	orderRepository := database.NewOrderRepository(db)
	orderCreated := event.NewOrderCreated()
	orderUseCase := usecase.NewOrderUseCase(orderRepository, orderCreated, eventDispatcher)
	return orderUseCase
}

func NewWebCreateOrderHandler(db *sql.DB, eventDispatcher events.EventDispatcherInterface) *web.WebCreateOrderHandler {
	orderRepository := database.NewOrderRepository(db)
	orderCreated := event.NewOrderCreated()
	webCreateOrderHandler := web.NewWebCreateOrderHandler(eventDispatcher, orderRepository, orderCreated)
	return webCreateOrderHandler
}

func NewWebGetOrderHandler(db *sql.DB, eventDispatcher events.EventDispatcherInterface) *web.WebGetOrderHandler {
	orderRepository := database.NewOrderRepository(db)
	orderList := event.NewOrderList()
	webGetOrderHandler := web.NewWebGetOrderHandler(eventDispatcher, orderRepository, orderList)
	return webGetOrderHandler
}

// wire.go:

var setOrderRepositoryDependency = wire.NewSet(database.NewOrderRepository, wire.Bind(new(entity.OrderRepositoryInterface), new(*database.OrderRepository)))

var setCreatedEventDispatcherDependency = wire.NewSet(events.NewEventDispatcher, event.NewOrderCreated, wire.Bind(new(events.EventInterface), new(*event.OrderCreated)), wire.Bind(new(events.EventDispatcherInterface), new(*events.EventDispatcher)))

var setListEventDispatcherDependency = wire.NewSet(events.NewEventDispatcher, event.NewOrderList, wire.Bind(new(events.EventInterface), new(*event.OrderList)), wire.Bind(new(events.EventDispatcherInterface), new(*events.EventDispatcher)))

var setOrderCreatedEvent = wire.NewSet(event.NewOrderCreated, wire.Bind(new(events.EventInterface), new(*event.OrderCreated)))

var setOrderListEvent = wire.NewSet(event.NewOrderList, wire.Bind(new(events.EventInterface), new(*event.OrderList)))
